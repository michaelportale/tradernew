"""Add MLModelMetadata and BacktestResult tables

Revision ID: e8363d23dc00
Revises: 
Create Date: 2025-05-23 05:19:10.853754

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'e8363d23dc00'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('backtest_results',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('strategy', sa.String(), nullable=False),
    sa.Column('start_time', sa.DateTime(), nullable=False),
    sa.Column('end_time', sa.DateTime(), nullable=False),
    sa.Column('returns', sa.Float(), nullable=True),
    sa.Column('sharpe_ratio', sa.Float(), nullable=True),
    sa.Column('results', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('economic_indicators',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('value', sa.Float(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('economic_indicators', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_economic_indicators_name'), ['name'], unique=False)

    op.create_table('market_data',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('symbol', sa.String(), nullable=False),
    sa.Column('open', sa.Float(), nullable=False),
    sa.Column('high', sa.Float(), nullable=False),
    sa.Column('low', sa.Float(), nullable=False),
    sa.Column('close', sa.Float(), nullable=False),
    sa.Column('volume', sa.Float(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('market_data', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_market_data_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_market_data_symbol'), ['symbol'], unique=False)
        batch_op.create_index(batch_op.f('ix_market_data_timestamp'), ['timestamp'], unique=False)

    op.create_table('ml_models',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('version', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('parameters', sa.JSON(), nullable=True),
    sa.Column('metrics', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('technical_indicators',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('symbol', sa.String(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('value', sa.Float(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('technical_indicators', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_technical_indicators_symbol'), ['symbol'], unique=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('technical_indicators', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_technical_indicators_symbol'))

    op.drop_table('technical_indicators')
    op.drop_table('ml_models')
    with op.batch_alter_table('market_data', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_market_data_timestamp'))
        batch_op.drop_index(batch_op.f('ix_market_data_symbol'))
        batch_op.drop_index(batch_op.f('ix_market_data_id'))

    op.drop_table('market_data')
    with op.batch_alter_table('economic_indicators', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_economic_indicators_name'))

    op.drop_table('economic_indicators')
    op.drop_table('backtest_results')
    # ### end Alembic commands ###
